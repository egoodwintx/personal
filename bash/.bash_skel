#-----------------------------------------
# .bash_skel
# project: personal
# description: personal bashrc file skeleton
# init date: 2022.12.14
# 
#-----------------------------------------


###### BEGIN ALIASES #######
if [ -e $HOME/.bash_aliases ]; then
    source $HOME/.bash_aliases # source personal bash alias file
fi
###### END ALIASES #######

## define system specific aliases below

###### BEGIN FUNCTIONS ########
if [ -e $HOME/.bash_functions ]; then
    source $HOME/.bash_functions # source personal bash functions file
fi
## define system specific functions below

###### END FUNCTIONS ########

###### BEGIN PATH ###########
export PATH="$HOME/bin/:/usr/local/sbin:/usr/sbin:$PATH:."
###### END PATH #############

###### BASH OPTIONS #########

HISTCONTROL=ignoreboth # ignore duplicate history lines
shopt -s histappend # append to the history file
#HISTSIZE = 100
#HISTFILESIZE = 1000

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h[\033[00m\]::\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h::\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

export PS1

# init
echo ""
echo "                --=( $HOSTNAME sys profile )=-- "
uptime
users
df -l | grep "/usr/"
echo ""
echo ""

